import type { Abi } from 'viem';

export const Erc4626VaultAbi = [
  {
    type: 'constructor',
    inputs: [],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'DOMAIN_SEPARATOR',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'UPGRADE_INTERFACE_VERSION',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'addValidator',
    inputs: [{ name: '_validatorId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'allowance',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: 'spender',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'approve',
    inputs: [
      { name: 'spender', type: 'address', internalType: 'address' },
      {
        name: 'value',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'asset',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'beefyFeeConfig',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'checkForSlashedValidatorsAndUndelegate',
    inputs: [{ name: 'validatorIndex', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'claimableRedeemRequest',
    inputs: [
      { name: '_requestId', type: 'uint256', internalType: 'uint256' },
      {
        name: '_controller',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: 'shares', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'completeSlashedValidatorWithdraw',
    inputs: [{ name: 'validatorIndex', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: 'amountRecovered', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'convertToAssets',
    inputs: [{ name: 'shares', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'convertToShares',
    inputs: [{ name: 'assets', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'decimals',
    inputs: [],
    outputs: [{ name: '_decimals', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'deposit',
    inputs: [
      { name: 'assets', type: 'uint256', internalType: 'uint256' },
      {
        name: 'receiver',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'eip712Domain',
    inputs: [],
    outputs: [
      { name: 'fields', type: 'bytes1', internalType: 'bytes1' },
      {
        name: 'name',
        type: 'string',
        internalType: 'string',
      },
      { name: 'version', type: 'string', internalType: 'string' },
      {
        name: 'chainId',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'verifyingContract', type: 'address', internalType: 'address' },
      {
        name: 'salt',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      { name: 'extensions', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'emergencyWithdraw',
    inputs: [
      { name: '_requestId', type: 'uint256', internalType: 'uint256' },
      {
        name: '_receiver',
        type: 'address',
        internalType: 'address',
      },
      { name: '_controller', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'assets', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'feeRecipients',
    inputs: [],
    outputs: [
      {
        name: 'beefyFeeRecipient',
        type: 'address',
        internalType: 'address',
      },
      { name: 'liquidityFeeRecipient', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getPricePerFullShare',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRate',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'harvest',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'initialize',
    inputs: [
      { name: '_want', type: 'address', internalType: 'address' },
      {
        name: '_stakingContract',
        type: 'address',
        internalType: 'address',
      },
      { name: '_beefyFeeRecipient', type: 'address', internalType: 'address' },
      {
        name: '_keeper',
        type: 'address',
        internalType: 'address',
      },
      { name: '_beefyFeeConfig', type: 'address', internalType: 'address' },
      {
        name: '_liquidityFeeRecipient',
        type: 'address',
        internalType: 'address',
      },
      { name: '_liquidityFee', type: 'uint256', internalType: 'uint256' },
      {
        name: '_name',
        type: 'string',
        internalType: 'string',
      },
      { name: '_symbol', type: 'string', internalType: 'string' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'isOperator',
    inputs: [
      { name: '_controller', type: 'address', internalType: 'address' },
      {
        name: '_operator',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'keeper',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'lastHarvest',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'liquidityFee',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'lockDuration',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'lockedProfit',
    inputs: [],
    outputs: [{ name: 'locked', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxDeposit',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxMint',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxRedeem',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxWithdraw',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'mint',
    inputs: [
      { name: 'shares', type: 'uint256', internalType: 'uint256' },
      {
        name: 'receiver',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'nonces',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'paused',
    inputs: [],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pendingRedeemRequest',
    inputs: [
      { name: '_requestId', type: 'uint256', internalType: 'uint256' },
      {
        name: '_controller',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [{ name: 'shares', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permit',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: 'spender',
        type: 'address',
        internalType: 'address',
      },
      { name: 'value', type: 'uint256', internalType: 'uint256' },
      {
        name: 'deadline',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'v', type: 'uint8', internalType: 'uint8' },
      {
        name: 'r',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      { name: 's', type: 'bytes32', internalType: 'bytes32' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'previewDeposit',
    inputs: [{ name: 'assets', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'previewMint',
    inputs: [{ name: 'shares', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'previewRedeem',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'previewWithdraw',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'proxiableUUID',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'redeem',
    inputs: [
      { name: '_requestId', type: 'uint256', internalType: 'uint256' },
      {
        name: '_receiver',
        type: 'address',
        internalType: 'address',
      },
      { name: '_controller', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'assets', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'requestRedeem',
    inputs: [
      { name: '_shares', type: 'uint256', internalType: 'uint256' },
      {
        name: '_controller',
        type: 'address',
        internalType: 'address',
      },
      { name: '_owner', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'requestId', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'requestRedeem',
    inputs: [
      { name: '_shares', type: 'uint256', internalType: 'uint256' },
      {
        name: '_controller',
        type: 'address',
        internalType: 'address',
      },
      { name: '_owner', type: 'address', internalType: 'address' },
      {
        name: '_emergency',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    outputs: [{ name: 'requestId', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setBeefyFeeConfig',
    inputs: [{ name: '_beefyFeeConfig', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setBeefyFeeRecipient',
    inputs: [{ name: '_beefyFeeRecipient', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setKeeper',
    inputs: [{ name: '_keeper', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setLiquidityFee',
    inputs: [{ name: '_liquidityFee', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setLiquidityFeeRecipient',
    inputs: [{ name: '_liquidityFeeRecipient', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setLockDuration',
    inputs: [{ name: '_lockDuration', type: 'uint32', internalType: 'uint32' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setMinHarvest',
    inputs: [{ name: '_minHarvest', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setOperator',
    inputs: [
      { name: '_operator', type: 'address', internalType: 'address' },
      {
        name: '_approved',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setValidatorStatus',
    inputs: [
      { name: '_validatorIndex', type: 'uint256', internalType: 'uint256' },
      {
        name: '_active',
        type: 'bool',
        internalType: 'bool',
      },
      { name: '_shouldClaim', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'share',
    inputs: [],
    outputs: [{ name: 'shareTokenAddress', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: 'supported', type: 'bool', internalType: 'bool' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalAssets',
    inputs: [],
    outputs: [{ name: 'total', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalLocked',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transfer',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      {
        name: 'value',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      { name: 'value', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'unpause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'upgradeToAndCall',
    inputs: [
      { name: 'newImplementation', type: 'address', internalType: 'address' },
      {
        name: 'data',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'userPendingRedeemRequests',
    inputs: [{ name: '_controller', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: 'requests',
        type: 'tuple[]',
        internalType: 'struct IBeefySonic.RedemptionRequest[]',
        components: [
          { name: 'assets', type: 'uint256', internalType: 'uint256' },
          {
            name: 'shares',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'requestTimestamp', type: 'uint32', internalType: 'uint32' },
          {
            name: 'emergency',
            type: 'bool',
            internalType: 'bool',
          },
          { name: 'withdrawalIds', type: 'uint256[]', internalType: 'uint256[]' },
          {
            name: 'validatorIds',
            type: 'uint256[]',
            internalType: 'uint256[]',
          },
          { name: 'requestId', type: 'uint256', internalType: 'uint256' },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'validatorByIndex',
    inputs: [{ name: '_validatorIndex', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct IBeefySonic.Validator',
        components: [
          { name: 'id', type: 'uint256', internalType: 'uint256' },
          {
            name: 'delegations',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'slashedWId', type: 'uint256', internalType: 'uint256' },
          {
            name: 'slashedDelegations',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'active', type: 'bool', internalType: 'bool' },
          {
            name: 'claim',
            type: 'bool',
            internalType: 'bool',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'validatorsLength',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'want',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'withdraw',
    inputs: [
      { name: '_requestId', type: 'uint256', internalType: 'uint256' },
      {
        name: '_receiver',
        type: 'address',
        internalType: 'address',
      },
      { name: '_controller', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: 'shares', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawDuration',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'Approval',
    inputs: [
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'spender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'value', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BeefyFeeConfigSet',
    inputs: [
      {
        name: 'oldBeefyFeeConfig',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'newBeefyFeeConfig', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BeefyFeeRecipientSet',
    inputs: [
      {
        name: 'oldBeefyFeeRecipient',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'newBeefyFeeRecipient', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChargedFees',
    inputs: [
      {
        name: 'beefyFee',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'liquidityFee', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ClaimedRewards',
    inputs: [{ name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Deposit',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'assets', type: 'uint256', indexed: false, internalType: 'uint256' },
      {
        name: 'shares',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  { type: 'event', name: 'EIP712DomainChanged', inputs: [], anonymous: false },
  {
    type: 'event',
    name: 'Initialized',
    inputs: [{ name: 'version', type: 'uint64', indexed: false, internalType: 'uint64' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'KeeperSet',
    inputs: [
      {
        name: 'oldKeeper',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'newKeeper', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'LiquidityFeeRecipientSet',
    inputs: [
      {
        name: 'oldLiquidityFeeRecipient',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'newLiquidityFeeRecipient', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'LiquidityFeeSet',
    inputs: [
      {
        name: 'oldLiquidityFee',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'newLiquidityFee', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'LockDurationSet',
    inputs: [
      {
        name: 'oldLockDuration',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'newLockDuration', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MinHarvestSet',
    inputs: [
      {
        name: 'oldMinHarvest',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'newMinHarvest', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Notify',
    inputs: [
      { name: 'notifier', type: 'address', indexed: false, internalType: 'address' },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OperatorSet',
    inputs: [
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'operator',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'approved', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Paused',
    inputs: [{ name: 'account', type: 'address', indexed: false, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RedeemRequest',
    inputs: [
      { name: 'controller', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'requestId', type: 'uint256', indexed: false, internalType: 'uint256' },
      {
        name: 'caller',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'shares', type: 'uint256', indexed: false, internalType: 'uint256' },
      {
        name: 'requestTimestamp',
        type: 'uint32',
        indexed: false,
        internalType: 'uint32',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'SlashedValidatorWithdrawn',
    inputs: [
      {
        name: 'validatorId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      { name: 'amountRecovered', type: 'uint256', indexed: false, internalType: 'uint256' },
      {
        name: 'loss',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Transfer',
    inputs: [
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'value', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Unpaused',
    inputs: [{ name: 'account', type: 'address', indexed: false, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Upgraded',
    inputs: [{ name: 'implementation', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ValidatorAdded',
    inputs: [
      {
        name: 'validatorId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'validatorIndex', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ValidatorClaimSet',
    inputs: [
      {
        name: 'validatorIndex',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      { name: 'claim', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ValidatorSlashed',
    inputs: [
      {
        name: 'validatorId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      {
        name: 'recoverableAmount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'delegations', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ValidatorStatusChanged',
    inputs: [
      {
        name: 'validatorIndex',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
      { name: 'active', type: 'bool', indexed: false, internalType: 'bool' },
      {
        name: 'shouldClaim',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Withdraw',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'receiver',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'assets',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      { name: 'shares', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'WithdrawProcessed',
    inputs: [
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      {
        name: 'receiver',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'shares', type: 'uint256', indexed: false, internalType: 'uint256' },
      {
        name: 'assets',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'AddressEmptyCode',
    inputs: [{ name: 'target', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'ECDSAInvalidSignature', inputs: [] },
  {
    type: 'error',
    name: 'ECDSAInvalidSignatureLength',
    inputs: [{ name: 'length', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'ECDSAInvalidSignatureS',
    inputs: [{ name: 's', type: 'bytes32', internalType: 'bytes32' }],
  },
  {
    type: 'error',
    name: 'ERC1967InvalidImplementation',
    inputs: [{ name: 'implementation', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'ERC1967NonPayable', inputs: [] },
  {
    type: 'error',
    name: 'ERC20InsufficientAllowance',
    inputs: [
      { name: 'spender', type: 'address', internalType: 'address' },
      {
        name: 'allowance',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'needed', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC20InsufficientBalance',
    inputs: [
      { name: 'sender', type: 'address', internalType: 'address' },
      {
        name: 'balance',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'needed', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC20InvalidApprover',
    inputs: [{ name: 'approver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC20InvalidReceiver',
    inputs: [{ name: 'receiver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC20InvalidSender',
    inputs: [{ name: 'sender', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC20InvalidSpender',
    inputs: [{ name: 'spender', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC2612ExpiredSignature',
    inputs: [{ name: 'deadline', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'ERC2612InvalidSigner',
    inputs: [
      { name: 'signer', type: 'address', internalType: 'address' },
      {
        name: 'owner',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'ERC4626ExceededMaxDeposit',
    inputs: [
      { name: 'receiver', type: 'address', internalType: 'address' },
      {
        name: 'assets',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'max', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC4626ExceededMaxMint',
    inputs: [
      { name: 'receiver', type: 'address', internalType: 'address' },
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'max', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC4626ExceededMaxRedeem',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'max', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC4626ExceededMaxWithdraw',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: 'assets',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'max', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'ERC7540AsyncFlow', inputs: [] },
  {
    type: 'error',
    name: 'EnforcedPause',
    inputs: [],
  },
  { type: 'error', name: 'ExpectedPause', inputs: [] },
  {
    type: 'error',
    name: 'FailedCall',
    inputs: [],
  },
  {
    type: 'error',
    name: 'InvalidAccountNonce',
    inputs: [
      { name: 'account', type: 'address', internalType: 'address' },
      {
        name: 'currentNonce',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  { type: 'error', name: 'InvalidInitialization', inputs: [] },
  {
    type: 'error',
    name: 'InvalidLiquidityFee',
    inputs: [],
  },
  { type: 'error', name: 'InvalidValidatorIndex', inputs: [] },
  {
    type: 'error',
    name: 'NoValidators',
    inputs: [],
  },
  { type: 'error', name: 'NoValidatorsWithCapacity', inputs: [] },
  {
    type: 'error',
    name: 'NotAuthorized',
    inputs: [],
  },
  { type: 'error', name: 'NotClaimableYet', inputs: [] },
  {
    type: 'error',
    name: 'NotEnoughRewards',
    inputs: [],
  },
  { type: 'error', name: 'NotInitializing', inputs: [] },
  {
    type: 'error',
    name: 'NotOK',
    inputs: [],
  },
  { type: 'error', name: 'NotReadyForHarvest', inputs: [] },
  {
    type: 'error',
    name: 'NothingToWithdraw',
    inputs: [],
  },
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'SlashNotRealized', inputs: [] },
  {
    type: 'error',
    name: 'UUPSUnauthorizedCallContext',
    inputs: [],
  },
  {
    type: 'error',
    name: 'UUPSUnsupportedProxiableUUID',
    inputs: [{ name: 'slot', type: 'bytes32', internalType: 'bytes32' }],
  },
  { type: 'error', name: 'ValidatorNotFound', inputs: [] },
  {
    type: 'error',
    name: 'WithdrawError',
    inputs: [],
  },
  { type: 'error', name: 'ZeroAddress', inputs: [] },
  {
    type: 'error',
    name: 'ZeroDeposit',
    inputs: [],
  },
] as const satisfies Abi;
